// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: message/protocol.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClientType int32

const (
	ClientType_ACTUATOR   ClientType = 0
	ClientType_CONTROLLER ClientType = 1
	ClientType_VISITOR    ClientType = 2
	ClientType_UNKNOWN    ClientType = 3
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "ACTUATOR",
		1: "CONTROLLER",
		2: "VISITOR",
		3: "UNKNOWN",
	}
	ClientType_value = map[string]int32{
		"ACTUATOR":   0,
		"CONTROLLER": 1,
		"VISITOR":    2,
		"UNKNOWN":    3,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_protocol_proto_enumTypes[0].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_message_protocol_proto_enumTypes[0]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{0}
}

type ControlState int32

const (
	ControlState_BIND ControlState = 0
	// keep the connection alive but don't send any data
	ControlState_UNBIND ControlState = 1
)

// Enum value maps for ControlState.
var (
	ControlState_name = map[int32]string{
		0: "BIND",
		1: "UNBIND",
	}
	ControlState_value = map[string]int32{
		"BIND":   0,
		"UNBIND": 1,
	}
)

func (x ControlState) Enum() *ControlState {
	p := new(ControlState)
	*p = x
	return p
}

func (x ControlState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlState) Descriptor() protoreflect.EnumDescriptor {
	return file_message_protocol_proto_enumTypes[1].Descriptor()
}

func (ControlState) Type() protoreflect.EnumType {
	return &file_message_protocol_proto_enumTypes[1]
}

func (x ControlState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlState.Descriptor instead.
func (ControlState) EnumDescriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{1}
}

// https://stackoverflow.com/questions/69185020/oneof-kind-vs-enum-in-protobuf
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ActuatorHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ActuatorHandshake) Reset() {
	*x = ActuatorHandshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActuatorHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatorHandshake) ProtoMessage() {}

func (x *ActuatorHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatorHandshake.ProtoReflect.Descriptor instead.
func (*ActuatorHandshake) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *ActuatorHandshake) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *ActuatorHandshake) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ControllerHandshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ControllerHandshake) Reset() {
	*x = ControllerHandshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControllerHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControllerHandshake) ProtoMessage() {}

func (x *ControllerHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControllerHandshake.ProtoReflect.Descriptor instead.
func (*ControllerHandshake) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *ControllerHandshake) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type Handshake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Handshake:
	//
	//	*Handshake_Actuator
	//	*Handshake_Controller
	Handshake isHandshake_Handshake `protobuf_oneof:"handshake"`
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{3}
}

func (m *Handshake) GetHandshake() isHandshake_Handshake {
	if m != nil {
		return m.Handshake
	}
	return nil
}

func (x *Handshake) GetActuator() *ActuatorHandshake {
	if x, ok := x.GetHandshake().(*Handshake_Actuator); ok {
		return x.Actuator
	}
	return nil
}

func (x *Handshake) GetController() *ControllerHandshake {
	if x, ok := x.GetHandshake().(*Handshake_Controller); ok {
		return x.Controller
	}
	return nil
}

type isHandshake_Handshake interface {
	isHandshake_Handshake()
}

type Handshake_Actuator struct {
	Actuator *ActuatorHandshake `protobuf:"bytes,2,opt,name=actuator,proto3,oneof"`
}

type Handshake_Controller struct {
	Controller *ControllerHandshake `protobuf:"bytes,3,opt,name=controller,proto3,oneof"`
}

func (*Handshake_Actuator) isHandshake_Handshake() {}

func (*Handshake_Controller) isHandshake_Handshake() {}

type ActuatorControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid  []byte       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	State ControlState `protobuf:"varint,2,opt,name=state,proto3,enum=message.ControlState" json:"state,omitempty"`
}

func (x *ActuatorControl) Reset() {
	*x = ActuatorControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActuatorControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatorControl) ProtoMessage() {}

func (x *ActuatorControl) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatorControl.ProtoReflect.Descriptor instead.
func (*ActuatorControl) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *ActuatorControl) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *ActuatorControl) GetState() ControlState {
	if x != nil {
		return x.State
	}
	return ControlState_BIND
}

// send by controller to bind actuator's STDOUT to controller
type ControlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControllerId []byte `protobuf:"bytes,1,opt,name=controllerId,proto3" json:"controllerId,omitempty"`
	ActuatorId   []byte `protobuf:"bytes,2,opt,name=actuatorId,proto3" json:"actuatorId,omitempty"`
}

func (x *ControlRequest) Reset() {
	*x = ControlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlRequest) ProtoMessage() {}

func (x *ControlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlRequest.ProtoReflect.Descriptor instead.
func (*ControlRequest) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *ControlRequest) GetControllerId() []byte {
	if x != nil {
		return x.ControllerId
	}
	return nil
}

func (x *ControlRequest) GetActuatorId() []byte {
	if x != nil {
		return x.ActuatorId
	}
	return nil
}

// should always be send by actuator
type StdOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdOut) Reset() {
	*x = StdOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdOut) ProtoMessage() {}

func (x *StdOut) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdOut.ProtoReflect.Descriptor instead.
func (*StdOut) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *StdOut) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// should always be send by controller
type StdIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StdIn) Reset() {
	*x = StdIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdIn) ProtoMessage() {}

func (x *StdIn) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdIn.ProtoReflect.Descriptor instead.
func (*StdIn) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *StdIn) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StdPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// actuator's uuid
	// don't need to know who's the controller
	Uuid []byte `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*StdPayload_Stdout
	//	*StdPayload_Stdin
	Payload isStdPayload_Payload `protobuf_oneof:"payload"`
}

func (x *StdPayload) Reset() {
	*x = StdPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StdPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StdPayload) ProtoMessage() {}

func (x *StdPayload) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StdPayload.ProtoReflect.Descriptor instead.
func (*StdPayload) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *StdPayload) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (m *StdPayload) GetPayload() isStdPayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *StdPayload) GetStdout() *StdOut {
	if x, ok := x.GetPayload().(*StdPayload_Stdout); ok {
		return x.Stdout
	}
	return nil
}

func (x *StdPayload) GetStdin() *StdIn {
	if x, ok := x.GetPayload().(*StdPayload_Stdin); ok {
		return x.Stdin
	}
	return nil
}

type isStdPayload_Payload interface {
	isStdPayload_Payload()
}

type StdPayload_Stdout struct {
	Stdout *StdOut `protobuf:"bytes,2,opt,name=stdout,proto3,oneof"`
}

type StdPayload_Stdin struct {
	Stdin *StdIn `protobuf:"bytes,3,opt,name=stdin,proto3,oneof"`
}

func (*StdPayload_Stdout) isStdPayload_Payload() {}

func (*StdPayload_Stdin) isStdPayload_Payload() {}

type ClientMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ClientMsg_Handshake
	//	*ClientMsg_ControlRequest
	//	*ClientMsg_StdPayload
	Payload isClientMsg_Payload `protobuf_oneof:"payload"`
}

func (x *ClientMsg) Reset() {
	*x = ClientMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMsg) ProtoMessage() {}

func (x *ClientMsg) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMsg.ProtoReflect.Descriptor instead.
func (*ClientMsg) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{9}
}

func (m *ClientMsg) GetPayload() isClientMsg_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ClientMsg) GetHandshake() *Handshake {
	if x, ok := x.GetPayload().(*ClientMsg_Handshake); ok {
		return x.Handshake
	}
	return nil
}

func (x *ClientMsg) GetControlRequest() *ControlRequest {
	if x, ok := x.GetPayload().(*ClientMsg_ControlRequest); ok {
		return x.ControlRequest
	}
	return nil
}

func (x *ClientMsg) GetStdPayload() *StdPayload {
	if x, ok := x.GetPayload().(*ClientMsg_StdPayload); ok {
		return x.StdPayload
	}
	return nil
}

type isClientMsg_Payload interface {
	isClientMsg_Payload()
}

type ClientMsg_Handshake struct {
	Handshake *Handshake `protobuf:"bytes,1,opt,name=handshake,proto3,oneof"`
}

type ClientMsg_ControlRequest struct {
	ControlRequest *ControlRequest `protobuf:"bytes,2,opt,name=controlRequest,proto3,oneof"`
}

type ClientMsg_StdPayload struct {
	StdPayload *StdPayload `protobuf:"bytes,3,opt,name=stdPayload,proto3,oneof"`
}

func (*ClientMsg_Handshake) isClientMsg_Payload() {}

func (*ClientMsg_ControlRequest) isClientMsg_Payload() {}

func (*ClientMsg_StdPayload) isClientMsg_Payload() {}

type ServerMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ServerMsg_Error
	//	*ServerMsg_ActuatorControl
	//	*ServerMsg_StdPayload
	Payload isServerMsg_Payload `protobuf_oneof:"payload"`
}

func (x *ServerMsg) Reset() {
	*x = ServerMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMsg) ProtoMessage() {}

func (x *ServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_message_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMsg.ProtoReflect.Descriptor instead.
func (*ServerMsg) Descriptor() ([]byte, []int) {
	return file_message_protocol_proto_rawDescGZIP(), []int{10}
}

func (m *ServerMsg) GetPayload() isServerMsg_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerMsg) GetError() *Error {
	if x, ok := x.GetPayload().(*ServerMsg_Error); ok {
		return x.Error
	}
	return nil
}

func (x *ServerMsg) GetActuatorControl() *ActuatorControl {
	if x, ok := x.GetPayload().(*ServerMsg_ActuatorControl); ok {
		return x.ActuatorControl
	}
	return nil
}

func (x *ServerMsg) GetStdPayload() *StdPayload {
	if x, ok := x.GetPayload().(*ServerMsg_StdPayload); ok {
		return x.StdPayload
	}
	return nil
}

type isServerMsg_Payload interface {
	isServerMsg_Payload()
}

type ServerMsg_Error struct {
	Error *Error `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type ServerMsg_ActuatorControl struct {
	ActuatorControl *ActuatorControl `protobuf:"bytes,2,opt,name=actuatorControl,proto3,oneof"`
}

type ServerMsg_StdPayload struct {
	StdPayload *StdPayload `protobuf:"bytes,3,opt,name=stdPayload,proto3,oneof"`
}

func (*ServerMsg_Error) isServerMsg_Payload() {}

func (*ServerMsg_ActuatorControl) isServerMsg_Payload() {}

func (*ServerMsg_StdPayload) isServerMsg_Payload() {}

var File_message_protocol_proto protoreflect.FileDescriptor

var file_message_protocol_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x33, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3b, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x92,
	0x01, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x38, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x48,
	0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x22, 0x52, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a,
	0x06, 0x53, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x05, 0x53,
	0x74, 0x64, 0x49, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x0a, 0x53, 0x74, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74,
	0x64, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x64, 0x4f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x74, 0x64, 0x49, 0x6e, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xc4, 0x01, 0x0a, 0x09, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x0a, 0x73, 0x74, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x64, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xbb, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x0a, 0x73,
	0x74, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x64, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x64, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x44, 0x0a,
	0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x43, 0x54, 0x55, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x49, 0x53,
	0x49, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x03, 0x2a, 0x24, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x49, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x55, 0x4e, 0x42, 0x49, 0x4e, 0x44, 0x10, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x74, 0x79, 0x61,
	0x6e, 0x2f, 0x73, 0x68, 0x2d, 0x6f, 0x76, 0x65, 0x72, 0x2d, 0x77, 0x73, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x3b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_protocol_proto_rawDescOnce sync.Once
	file_message_protocol_proto_rawDescData = file_message_protocol_proto_rawDesc
)

func file_message_protocol_proto_rawDescGZIP() []byte {
	file_message_protocol_proto_rawDescOnce.Do(func() {
		file_message_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_protocol_proto_rawDescData)
	})
	return file_message_protocol_proto_rawDescData
}

var file_message_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_message_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_message_protocol_proto_goTypes = []interface{}{
	(ClientType)(0),             // 0: message.ClientType
	(ControlState)(0),           // 1: message.ControlState
	(*Error)(nil),               // 2: message.Error
	(*ActuatorHandshake)(nil),   // 3: message.ActuatorHandshake
	(*ControllerHandshake)(nil), // 4: message.ControllerHandshake
	(*Handshake)(nil),           // 5: message.Handshake
	(*ActuatorControl)(nil),     // 6: message.ActuatorControl
	(*ControlRequest)(nil),      // 7: message.ControlRequest
	(*StdOut)(nil),              // 8: message.StdOut
	(*StdIn)(nil),               // 9: message.StdIn
	(*StdPayload)(nil),          // 10: message.StdPayload
	(*ClientMsg)(nil),           // 11: message.ClientMsg
	(*ServerMsg)(nil),           // 12: message.ServerMsg
}
var file_message_protocol_proto_depIdxs = []int32{
	3,  // 0: message.Handshake.actuator:type_name -> message.ActuatorHandshake
	4,  // 1: message.Handshake.controller:type_name -> message.ControllerHandshake
	1,  // 2: message.ActuatorControl.state:type_name -> message.ControlState
	8,  // 3: message.StdPayload.stdout:type_name -> message.StdOut
	9,  // 4: message.StdPayload.stdin:type_name -> message.StdIn
	5,  // 5: message.ClientMsg.handshake:type_name -> message.Handshake
	7,  // 6: message.ClientMsg.controlRequest:type_name -> message.ControlRequest
	10, // 7: message.ClientMsg.stdPayload:type_name -> message.StdPayload
	2,  // 8: message.ServerMsg.error:type_name -> message.Error
	6,  // 9: message.ServerMsg.actuatorControl:type_name -> message.ActuatorControl
	10, // 10: message.ServerMsg.stdPayload:type_name -> message.StdPayload
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_message_protocol_proto_init() }
func file_message_protocol_proto_init() {
	if File_message_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActuatorHandshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControllerHandshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Handshake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActuatorControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StdPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_protocol_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Handshake_Actuator)(nil),
		(*Handshake_Controller)(nil),
	}
	file_message_protocol_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*StdPayload_Stdout)(nil),
		(*StdPayload_Stdin)(nil),
	}
	file_message_protocol_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ClientMsg_Handshake)(nil),
		(*ClientMsg_ControlRequest)(nil),
		(*ClientMsg_StdPayload)(nil),
	}
	file_message_protocol_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*ServerMsg_Error)(nil),
		(*ServerMsg_ActuatorControl)(nil),
		(*ServerMsg_StdPayload)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_protocol_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_protocol_proto_goTypes,
		DependencyIndexes: file_message_protocol_proto_depIdxs,
		EnumInfos:         file_message_protocol_proto_enumTypes,
		MessageInfos:      file_message_protocol_proto_msgTypes,
	}.Build()
	File_message_protocol_proto = out.File
	file_message_protocol_proto_rawDesc = nil
	file_message_protocol_proto_goTypes = nil
	file_message_protocol_proto_depIdxs = nil
}
